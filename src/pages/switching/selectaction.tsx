import Head from 'next/head'
import { useRouter } from 'next/router'
import { useDispatch } from 'react-redux'
import { Card } from '@components/Card/Card'
import { Content } from '@styles/common.style'
import { ProgressBar } from '@components/ProgressBar/ProgressBar'
import { Button } from '@components/Button/Button'
import { actionsConfig, steps } from '@utils/constants'
import { useState } from 'react'
import { ActionHeader } from '@components/ActionHeader/ActionHeader'
import { setActionCard } from '@state/preSwitchJourney/preSwitchJourneySlice'
import { SwitchingColumnContainer, SwitchingColumn } from '@modules/Switching/Switching.style'
import * as S from '@modules/Switching/PreSwitching.style'
import { ButtonContainer } from '@styles/common.style'
import { ActionSelector } from '@components/ActionSelector/ActionSelector'

type ActionsConfig = typeof actionsConfig[0]

const SelectAction = (): JSX.Element => {
  const { push } = useRouter()
  const dispatch = useDispatch()
  const [selectedRoute, setRoute] = useState(actionsConfig[0].route)
  const [currentAction, setAction] = useState<ActionsConfig | null>(null)

  const selectAction = (index: number) => () => {
    setRoute(actionsConfig[index].route)
    setAction(actionsConfig[index])
    dispatch(setActionCard(index))
  }

  return (
    <>
      <Head>
        <title>SwitchIt</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
      </Head>

      <Content>
        <SwitchingColumnContainer>
          <SwitchingColumn>
            <Card column padded>
              <ActionHeader
                header={`Let's design your switching journey, and maximise your impact`}
                subHeader={`Select which of the following actions you'd like to take. The more actions completed, the bigger the impact.`}
              />

              <ActionSelector currentAction={currentAction} selectAction={selectAction} isDefault />

              <S.Section>
                <ButtonContainer>
                  <Button
                    type='button'
                    disabled={!currentAction}
                    onClick={() => {
                      push(selectedRoute)
                    }}
                  >
                    Take This Step
                  </Button>
                </ButtonContainer>
                <ProgressBar step={steps.breakupLetter} />
              </S.Section>
            </Card>
          </SwitchingColumn>
        </SwitchingColumnContainer>
      </Content>
    </>
  )
}

export default SelectAction
